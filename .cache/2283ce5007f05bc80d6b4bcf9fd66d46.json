{"dependencies":[{"name":"history/lib/Actions","loc":{"line":5,"column":24}},{"name":"invariant","loc":{"line":6,"column":22}},{"name":"./createMemoryHistory","loc":{"line":8,"column":32}},{"name":"./createTransitionManager","loc":{"line":9,"column":36}},{"name":"./RouteUtils","loc":{"line":10,"column":29}},{"name":"./RouterUtils","loc":{"line":11,"column":57}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Actions = require(\"history/lib/Actions\");\n\nvar _invariant = require(\"invariant\");\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _createMemoryHistory = require(\"./createMemoryHistory\");\n\nvar _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);\n\nvar _createTransitionManager = require(\"./createTransitionManager\");\n\nvar _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);\n\nvar _RouteUtils = require(\"./RouteUtils\");\n\nvar _RouterUtils = require(\"./RouterUtils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];\n  }return target;\n}\n\n/**\n * A high-level API to be used for server-side rendering.\n *\n * This function matches a location to a set of routes and calls\n * callback(error, redirectLocation, renderProps) when finished.\n *\n * Note: You probably don't want to use this in a browser unless you're using\n * server-side rendering with async routes.\n */\nfunction match(_ref, callback) {\n  var history = _ref.history;\n  var routes = _ref.routes;\n  var location = _ref.location;\n\n  var options = _objectWithoutProperties(_ref, ['history', 'routes', 'location']);\n\n  !(history || location) ? \"development\" !== 'production' ? (0, _invariant2.default)(false, 'match needs a history or a location') : (0, _invariant2.default)(false) : void 0;\n\n  history = history ? history : (0, _createMemoryHistory2.default)(options);\n  var transitionManager = (0, _createTransitionManager2.default)(history, (0, _RouteUtils.createRoutes)(routes));\n\n  var unlisten = void 0;\n\n  if (location) {\n    // Allow match({ location: '/the/path', ... })\n    location = history.createLocation(location);\n  } else {\n    // Pick up the location from the history via synchronous history.listen\n    // call if needed.\n    unlisten = history.listen(function (historyLocation) {\n      location = historyLocation;\n    });\n  }\n\n  var router = (0, _RouterUtils.createRouterObject)(history, transitionManager);\n  history = (0, _RouterUtils.createRoutingHistory)(history, transitionManager);\n\n  transitionManager.match(location, function (error, redirectLocation, nextState) {\n    callback(error, redirectLocation && router.createLocation(redirectLocation, _Actions.REPLACE), nextState && _extends({}, nextState, {\n      history: history,\n      router: router,\n      matchContext: { history: history, transitionManager: transitionManager, router: router }\n    }));\n\n    // Defer removing the listener to here to prevent DOM histories from having\n    // to unwind DOM event listeners unnecessarily, in case callback renders a\n    // <Router> and attaches another history listener.\n    if (unlisten) {\n      unlisten();\n    }\n  });\n}\n\nexports.default = match;"},"hash":"7392c3e6333905dde8fed7e43e568945"}